apply plugin: 'com.android.application'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    signingConfigs {
        signconfig {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    compileSdkVersion 25
    buildToolsVersion '27.0.3'
    defaultConfig {
        applicationId "de.cwde.freeshisen"
        minSdkVersion 9
        targetSdkVersion 10
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.signconfig
        }
        debug {
            applicationIdSuffix '.dbg'
            versionNameSuffix 'dbg'
        }
    }
}

dependencies {
    implementation 'com.android.support:support-v4:25.3.0'
}

afterEvaluate {
    project.getTasks().findAll { task -> task.name.contains("compile") && task.name.contains("Release") }.each { task ->
        task.dependsOn('removeLogs')
    }

    task removeLogs() {
        doLast {
            fileTree(dir: project.file('src')).include('**/*.java').each { File file ->
                def out = file.getText("UTF-8").replaceAll("([^/])((android\\.util\\.)*Log\\.([ewidv]|wtf)\\s*\\([\\S\\s]*?\\)\\s*;)", "\$1//\$2")
                file.write(out);
            }
        }
    }
}
